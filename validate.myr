use std
use xml

const valid = {path
	var x

	//std.put("processing {}\n", path)
	std.put(".")
	match xml.mkpath(path)
	| `std.Ok o: x = o
	| `std.Err `xml.Eenc "UTF-16":
		//std.put("UTF-16 is not supported\n")
		-> void
	| `std.Err e:
		std.fatal("{}: {}\n", path, e)
		-> void
	;;

	for ev : xml.byevent(x)
		match ev
		| `std.Ok e:
			//std.put("{}\n", e)
		| `std.Err e:
			std.fatal("{}: {}\n", path, e)
		;;
	;;

	xml.free(x)
}

const isxml = {p
	const ext = ".xml"

	if p.len > ext.len
		if std.sleq(p[p.len-ext.len:], ext)
			-> true
		;;
	;;

	-> false
}

const main = {
	const dirs = [
		"/tmp/xmlconf/xmltest",
		"/tmp/xmlconf/xmltest/valid/sa",
		"/tmp/xmlconf/sun",
		"/tmp/xmlconf/sun/valid",
		"/tmp/xmlconf/oasis",
	]
	var d
	var path

	for dir : dirs
		std.put("{}: ", dir)
		d = std.try(std.diropen(dir))

		for f : std.byentry(d)
			if !isxml(f) || std.strhas(f, "fail")
				continue
			;;
			path = std.pathcat(dir, f)
			valid(path)
			std.slfree(path)
		;;

		std.dirclose(d)
		std.put("\n")
	;;

}

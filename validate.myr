use std
use xml

const dotest = {test, dir, v
	var id, uri, description
	var path
	var x
	var eof = false

	match std.htget(test, "id")
	| `std.Some s:	id = s
	| `std.None:	std.fatal("id missing\n")
	;;

	match std.htget(test, "uri")
	| `std.Some s:	uri = s
	| `std.None:	std.fatal("uri missing\n")
	;;

	match std.htget(test, "description")
	| `std.Some s:	description = s
	| `std.None:	std.fatal("description missing\n")
	;;

	path = std.pathcat(dir, uri)

	match xml.mkpath(path)
	| `std.Ok o:
		x = o
	| `std.Err `xml.Eenc "UTF-16":
		-> void
	| `std.Err e:
		std.fatal("{}: {} {}\n", id, path, e)
	;;

	for ev : xml.byevent(x)
		match ev
		| `xml.Eof:	eof = true
		| _:
		;;
	;;

	match xml.geterr(x)
	| `std.Some e:
		std.put("\n")
		std.put("FAIL: ({}) {}: {}\n", id, description, e)
	| `std.None:
		if v
			std.put("PASS: {}\n", id)
		else
			std.put(".")
		;;
	;;

	if !eof
		std.put("{}: didn't reach eof\n", id)
	;;

	std.slfree(id)
	std.slfree(uri)
	std.slfree(description)
	std.slfree(path)
	xml.free(x)
}

const xmltest = {dir, suite, v
	var x = std.try(xml.mkpath(suite))
	var valid = false
	var test

	std.put("{}: ", suite)
	if v
		std.put("\n")
	;;

	test = std.mkht()

	for ev : xml.byevent(x)
		match ev
		| `xml.Start ("TEST", attrs):
			var vers = true
			var id = "", uri = ""

			for a : attrs
				match a
				| ("URI", u):
					uri = u
					/* many of the OASIS tests have valid
					   xml declared as invalid in the
					   test schema but they helpfully
					   put "pass" in the filename, *shrug*
					*/
					if std.strhas(uri, "pass")
						valid = true
					;;
				| ("ID", i):
					id = i
				| ("TYPE", "valid"):
					valid = true
				| ("VERSION", "1.1"):
					vers = false
				| _:
				;;
			;;

			if !vers
				valid = false
			;;

			if valid
				std.htput(test, "id", std.sldup(id))
				std.htput(test, "uri", std.sldup(uri))
			;;
		| `xml.Characters c:
			if valid
				std.htput(test, "description", std.sldup(c))
			;;
		| `xml.End "TEST":
			if valid
				dotest(test, dir, v)
				std.htfree(test)
				valid = false
				test = std.mkht()
			;;
		| _:
		;;
	;;

	std.htfree(test)
	xml.free(x)
	std.put("\n")
}

const main = {
	xmltest("xmlconf/xmltest", "xmlconf/xmltest/xmltest.xml", false)
	xmltest("xmlconf/sun", "xmlconf/sun/sun-valid.xml", false)
	xmltest("xmlconf/oasis", "xmlconf/oasis/oasis.xml", false)
	xmltest("xmlconf/ibm", "xmlconf/ibm/ibm_oasis_valid.xml", false)
	xmltest("xmlconf/eduni/errata-4e", "xmlconf/eduni/errata-4e/errata4e.xml", false)
	xmltest("xmlconf/eduni/errata-3e", "xmlconf/eduni/errata-3e/errata3e.xml", false)
	xmltest("xmlconf/eduni/errata-2e", "xmlconf/eduni/errata-2e/errata2e.xml", false)
	xmltest("xmlconf/eduni/namespaces/1.0", "xmlconf/eduni/namespaces/1.0/rmt-ns10.xml", false)
	xmltest("xmlconf/japanese", "xmlconf/japanese/japanese.xml", false)
}

use std
use bio
use xml

const main = {
	/*var x = xml.mkbuf("<?xml version=\"1.0\"?>\n" \
			"<?test stuff and things and more stuff ?>\n" \
			"<?test?>\n" \
			"<!DOCTYPE\ttesting 123   >\n" \
			"<testing thing=\"ztuff\" foo=\"bar\" works=\"yes\">\n" \
			"<this>hello world</this>\n" \
			"<empty \t />\n" \
			"<stillempty blah=\"foo\" things=\"stuff\"   \t  />\n" \
			"<blah><![CDATA[this is cdata]]></blah>\n" \
			"<!-- Testing 123 -->" \
			"</testing>\n")
	*/

	//var f = std.try(bio.open("test/recset.xml", bio.Rd))
	//var f = std.try(bio.open("test/feed.xml", bio.Rd))
	var f = std.try(bio.open("test/example.xml", bio.Rd))

	var x = xml.mkfile(f)

	for event : xml.byevent(x)
		match event
		| `std.Ok `xml.Start ("rss", attr):
			for a : attr
				match a
				| ("version", v):
					std.put("{}\n", v)
				| _:
				;;
			;;
		| `std.Ok `xml.Characters c:
			std.put("\t\"{}\"\n", xml.unescape(c))
		| `std.Ok `xml.Instruction (t, d):
			std.put("<?{} {}?>\n", t, d)
		| `std.Ok `xml.Doctype d:
			std.put("<!DOCTYPE {}>\n", d)
		| _:
			std.put("{}\n", event)
		;;
	;;

	xml.free(x)
}
